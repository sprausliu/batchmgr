#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="batch")]
public partial class ClientVerifyDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void InsertClient_Verify(Client_Verify instance);
  partial void UpdateClient_Verify(Client_Verify instance);
  partial void DeleteClient_Verify(Client_Verify instance);
  partial void InsertResetPWDRequest(ResetPWDRequest instance);
  partial void UpdateResetPWDRequest(ResetPWDRequest instance);
  partial void DeleteResetPWDRequest(ResetPWDRequest instance);
  #endregion
	
	public ClientVerifyDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["batchConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public ClientVerifyDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ClientVerifyDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ClientVerifyDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ClientVerifyDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Client_Verify> Client_Verify
	{
		get
		{
			return this.GetTable<Client_Verify>();
		}
	}
	
	public System.Data.Linq.Table<ResetPWDRequest> ResetPWDRequest
	{
		get
		{
			return this.GetTable<ResetPWDRequest>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client_Verify")]
public partial class Client_Verify : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _Loginid;
	
	private string _AppName;
	
	private string _PWD;
	
	private bool _available;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnLoginidChanging(string value);
    partial void OnLoginidChanged();
    partial void OnAppNameChanging(string value);
    partial void OnAppNameChanged();
    partial void OnPWDChanging(string value);
    partial void OnPWDChanged();
    partial void OnavailableChanging(bool value);
    partial void OnavailableChanged();
    #endregion
	
	public Client_Verify()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loginid", DbType="NVarChar(50)")]
	public string Loginid
	{
		get
		{
			return this._Loginid;
		}
		set
		{
			if ((this._Loginid != value))
			{
				this.OnLoginidChanging(value);
				this.SendPropertyChanging();
				this._Loginid = value;
				this.SendPropertyChanged("Loginid");
				this.OnLoginidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppName", DbType="NVarChar(50)")]
	public string AppName
	{
		get
		{
			return this._AppName;
		}
		set
		{
			if ((this._AppName != value))
			{
				this.OnAppNameChanging(value);
				this.SendPropertyChanging();
				this._AppName = value;
				this.SendPropertyChanged("AppName");
				this.OnAppNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PWD", DbType="NVarChar(50)")]
	public string PWD
	{
		get
		{
			return this._PWD;
		}
		set
		{
			if ((this._PWD != value))
			{
				this.OnPWDChanging(value);
				this.SendPropertyChanging();
				this._PWD = value;
				this.SendPropertyChanged("PWD");
				this.OnPWDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_available", DbType="Bit NOT NULL")]
	public bool available
	{
		get
		{
			return this._available;
		}
		set
		{
			if ((this._available != value))
			{
				this.OnavailableChanging(value);
				this.SendPropertyChanging();
				this._available = value;
				this.SendPropertyChanged("available");
				this.OnavailableChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResetPWDRequest")]
public partial class ResetPWDRequest : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _guid;
	
	private string _loginid;
	
	private System.DateTime _requestDate;
	
	private bool _valid;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnguidChanging(System.Guid value);
    partial void OnguidChanged();
    partial void OnloginidChanging(string value);
    partial void OnloginidChanged();
    partial void OnrequestDateChanging(System.DateTime value);
    partial void OnrequestDateChanged();
    partial void OnvalidChanging(bool value);
    partial void OnvalidChanged();
    #endregion
	
	public ResetPWDRequest()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guid", DbType="UniqueIdentifier", IsPrimaryKey=true)]
	public System.Guid guid
	{
		get
		{
			return this._guid;
		}
		set
		{
			if ((this._guid != value))
			{
				this.OnguidChanging(value);
				this.SendPropertyChanging();
				this._guid = value;
				this.SendPropertyChanged("guid");
				this.OnguidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loginid", DbType="VarChar(20)")]
	public string loginid
	{
		get
		{
			return this._loginid;
		}
		set
		{
			if ((this._loginid != value))
			{
				this.OnloginidChanging(value);
				this.SendPropertyChanging();
				this._loginid = value;
				this.SendPropertyChanged("loginid");
				this.OnloginidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requestDate", DbType="DateTime")]
	public System.DateTime requestDate
	{
		get
		{
			return this._requestDate;
		}
		set
		{
			if ((this._requestDate != value))
			{
				this.OnrequestDateChanging(value);
				this.SendPropertyChanging();
				this._requestDate = value;
				this.SendPropertyChanged("requestDate");
				this.OnrequestDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valid", DbType="Bit Not NULL")]
	public bool valid
	{
		get
		{
			return this._valid;
		}
		set
		{
			if ((this._valid != value))
			{
				this.OnvalidChanging(value);
				this.SendPropertyChanging();
				this._valid = value;
				this.SendPropertyChanged("valid");
				this.OnvalidChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
