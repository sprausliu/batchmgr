#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="batch")]
public partial class mcDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void Insertmanual_close(manual_close instance);
  partial void Updatemanual_close(manual_close instance);
  partial void Deletemanual_close(manual_close instance);
  #endregion
	
	public mcDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["batchConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public mcDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public mcDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public mcDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public mcDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<manual_close> manual_close
	{
		get
		{
			return this.GetTable<manual_close>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.manual_close")]
public partial class manual_close : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _r_id;
	
	private string _batch_no;
	
	private string _r_reason;
	
	private string _r_type;
	
	private string _r_inputer;
	
	private System.Nullable<System.DateTime> _r_inputdate;
	
	private string _r_updateby;
	
	private System.Nullable<System.DateTime> _r_updated;
	
	private string _r_dept;
	
	private string _r_operator;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onr_idChanging(int value);
    partial void Onr_idChanged();
    partial void Onbatch_noChanging(string value);
    partial void Onbatch_noChanged();
    partial void Onr_reasonChanging(string value);
    partial void Onr_reasonChanged();
    partial void Onr_typeChanging(string value);
    partial void Onr_typeChanged();
    partial void Onr_inputerChanging(string value);
    partial void Onr_inputerChanged();
    partial void Onr_inputdateChanging(System.Nullable<System.DateTime> value);
    partial void Onr_inputdateChanged();
    partial void Onr_updatebyChanging(string value);
    partial void Onr_updatebyChanged();
    partial void Onr_updatedChanging(System.Nullable<System.DateTime> value);
    partial void Onr_updatedChanged();
    partial void Onr_deptChanging(string value);
    partial void Onr_deptChanged();
    partial void Onr_operatorChanging(string value);
    partial void Onr_operatorChanged();
    #endregion
	
	public manual_close()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int r_id
	{
		get
		{
			return this._r_id;
		}
		set
		{
			if ((this._r_id != value))
			{
				this.Onr_idChanging(value);
				this.SendPropertyChanging();
				this._r_id = value;
				this.SendPropertyChanged("r_id");
				this.Onr_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batch_no", DbType="VarChar(50)")]
	public string batch_no
	{
		get
		{
			return this._batch_no;
		}
		set
		{
			if ((this._batch_no != value))
			{
				this.Onbatch_noChanging(value);
				this.SendPropertyChanging();
				this._batch_no = value;
				this.SendPropertyChanged("batch_no");
				this.Onbatch_noChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_reason", DbType="NVarChar(MAX)")]
	public string r_reason
	{
		get
		{
			return this._r_reason;
		}
		set
		{
			if ((this._r_reason != value))
			{
				this.Onr_reasonChanging(value);
				this.SendPropertyChanging();
				this._r_reason = value;
				this.SendPropertyChanged("r_reason");
				this.Onr_reasonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_type", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string r_type
	{
		get
		{
			return this._r_type;
		}
		set
		{
			if ((this._r_type != value))
			{
				this.Onr_typeChanging(value);
				this.SendPropertyChanging();
				this._r_type = value;
				this.SendPropertyChanged("r_type");
				this.Onr_typeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_inputer", DbType="VarChar(50)")]
	public string r_inputer
	{
		get
		{
			return this._r_inputer;
		}
		set
		{
			if ((this._r_inputer != value))
			{
				this.Onr_inputerChanging(value);
				this.SendPropertyChanging();
				this._r_inputer = value;
				this.SendPropertyChanged("r_inputer");
				this.Onr_inputerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_inputdate", DbType="DateTime")]
	public System.Nullable<System.DateTime> r_inputdate
	{
		get
		{
			return this._r_inputdate;
		}
		set
		{
			if ((this._r_inputdate != value))
			{
				this.Onr_inputdateChanging(value);
				this.SendPropertyChanging();
				this._r_inputdate = value;
				this.SendPropertyChanged("r_inputdate");
				this.Onr_inputdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_updateby", DbType="VarChar(50)")]
	public string r_updateby
	{
		get
		{
			return this._r_updateby;
		}
		set
		{
			if ((this._r_updateby != value))
			{
				this.Onr_updatebyChanging(value);
				this.SendPropertyChanging();
				this._r_updateby = value;
				this.SendPropertyChanged("r_updateby");
				this.Onr_updatebyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_updated", DbType="DateTime")]
	public System.Nullable<System.DateTime> r_updated
	{
		get
		{
			return this._r_updated;
		}
		set
		{
			if ((this._r_updated != value))
			{
				this.Onr_updatedChanging(value);
				this.SendPropertyChanging();
				this._r_updated = value;
				this.SendPropertyChanged("r_updated");
				this.Onr_updatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_dept", DbType="NVarChar(256)")]
	public string r_dept
	{
		get
		{
			return this._r_dept;
		}
		set
		{
			if ((this._r_dept != value))
			{
				this.Onr_deptChanging(value);
				this.SendPropertyChanging();
				this._r_dept = value;
				this.SendPropertyChanged("r_dept");
				this.Onr_deptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_r_operator", DbType="VarChar(50)")]
	public string r_operator
	{
		get
		{
			return this._r_operator;
		}
		set
		{
			if ((this._r_operator != value))
			{
				this.Onr_operatorChanging(value);
				this.SendPropertyChanging();
				this._r_operator = value;
				this.SendPropertyChanged("r_operator");
				this.Onr_operatorChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
